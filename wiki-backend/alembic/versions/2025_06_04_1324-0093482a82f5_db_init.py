# alembic/script.py.mako
"""db_init

Revision ID: 0093482a82f5
Revises: 
Create Date: 2025-06-04 13:24:09.864211

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils.types.ltree

# revision identifiers, used by Alembic.
revision = '0093482a82f5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('articles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('current_commit_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('article_type', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.create_index('ix_articles_article_id', ['id'], unique=False)
        batch_op.create_index('ix_articles_current_commit_id', ['current_commit_id'], unique=False)
        batch_op.create_index('ix_articles_status', ['status'], unique=False)
        batch_op.create_index('ix_articles_title', ['title'], unique=False)

    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('path', sqlalchemy_utils.types.ltree.LtreeType(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_categories_path'), ['path'], unique=False)

    op.create_table('permissions',
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('can_edit', sa.Boolean(), nullable=True),
    sa.Column('can_delete', sa.Boolean(), nullable=True),
    sa.Column('can_moderate', sa.Boolean(), nullable=True),
    sa.Column('bypass_tag_restrictions', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('role')
    )
    op.create_table('templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('variables', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('templates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_templates_name'), ['name'], unique=True)

    op.create_table('article_categories',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('article_id', 'category_id')
    )
    op.create_table('branch_tag_permissions',
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('can_read', sa.Boolean(), nullable=True),
    sa.Column('can_write', sa.Boolean(), nullable=True),
    sa.Column('can_merge', sa.Boolean(), nullable=True),
    sa.Column('can_delete_branch', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['permissions.role'], ),
    sa.PrimaryKeyConstraint('tag', 'role')
    )
    with op.batch_alter_table('branch_tag_permissions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_branch_tag_permissions_tag'), ['tag'], unique=False)

    op.create_table('tags',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('article_id', 'tag')
    )
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tags_tag'), ['tag'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['role'], ['permissions.role'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('reply_to_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['reply_to_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('commits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('content_diff', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('is_merge', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('commits', schema=None) as batch_op:
        batch_op.create_index('ix_commits_article_id', ['article_id'], unique=False)
        batch_op.create_index('ix_commits_author_id', ['author_id'], unique=False)
        batch_op.create_index('ix_commits_created_at', ['created_at'], unique=False)
        batch_op.create_index('ix_commits_is_merge', ['is_merge'], unique=False)

    op.create_table('profile_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag_permissions',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('can_edit', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['article_id', 'tag'], ['tags.article_id', 'tags.tag'], ),
    sa.ForeignKeyConstraint(['role'], ['permissions.role'], ),
    sa.PrimaryKeyConstraint('article_id', 'tag', 'role')
    )
    op.create_table('user_profiles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('social_links', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('branches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('head_commit_id', sa.UUID(), nullable=False),
    sa.Column('is_protected', sa.Boolean(), nullable=True),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['head_commit_id'], ['commits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.create_index('ix_branches_article_id', ['article_id'], unique=False)
        batch_op.create_index('ix_branches_created_by', ['created_by'], unique=False)
        batch_op.create_index('ix_branches_head_commit_id', ['head_commit_id'], unique=False)
        batch_op.create_index('ix_branches_name_article', ['article_id', 'name'], unique=True)

    op.create_table('commit_parents',
    sa.Column('commit_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['commit_id'], ['commits.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['commits.id'], ),
    sa.PrimaryKeyConstraint('commit_id', 'parent_id')
    )
    with op.batch_alter_table('commit_parents', schema=None) as batch_op:
        batch_op.create_index('ix_commit_parents_commit_id', ['commit_id'], unique=False)
        batch_op.create_index('ix_commit_parents_parent_id', ['parent_id'], unique=False)

    op.create_table('media',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('commit_id', sa.UUID(), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('storage_path', sa.Text(), nullable=False),
    sa.Column('bucket_name', sa.String(length=100), nullable=False),
    sa.Column('object_key', sa.Text(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('public_url', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.ForeignKeyConstraint(['commit_id'], ['commits.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('moderation',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('commit_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('moderator_id', sa.UUID(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['commit_id'], ['commits.id'], ),
    sa.ForeignKeyConstraint(['moderator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch_access',
    sa.Column('branch_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('access_level', sa.String(length=20), nullable=False),
    sa.Column('granted_by', sa.UUID(), nullable=False),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('branch_id', 'user_id')
    )
    op.create_table('branch_tags',
    sa.Column('branch_id', sa.UUID(), nullable=False),
    sa.Column('tag', sa.String(length=50), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('branch_id', 'tag')
    )
    with op.batch_alter_table('branch_tags', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_branch_tags_tag'), ['tag'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('branch_tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_branch_tags_tag'))

    op.drop_table('branch_tags')
    op.drop_table('branch_access')
    op.drop_table('moderation')
    op.drop_table('media')
    with op.batch_alter_table('commit_parents', schema=None) as batch_op:
        batch_op.drop_index('ix_commit_parents_parent_id')
        batch_op.drop_index('ix_commit_parents_commit_id')

    op.drop_table('commit_parents')
    with op.batch_alter_table('branches', schema=None) as batch_op:
        batch_op.drop_index('ix_branches_name_article')
        batch_op.drop_index('ix_branches_head_commit_id')
        batch_op.drop_index('ix_branches_created_by')
        batch_op.drop_index('ix_branches_article_id')

    op.drop_table('branches')
    op.drop_table('user_profiles')
    op.drop_table('tag_permissions')
    op.drop_table('profile_versions')
    with op.batch_alter_table('commits', schema=None) as batch_op:
        batch_op.drop_index('ix_commits_is_merge')
        batch_op.drop_index('ix_commits_created_at')
        batch_op.drop_index('ix_commits_author_id')
        batch_op.drop_index('ix_commits_article_id')

    op.drop_table('commits')
    op.drop_table('comments')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tags_tag'))

    op.drop_table('tags')
    with op.batch_alter_table('branch_tag_permissions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_branch_tag_permissions_tag'))

    op.drop_table('branch_tag_permissions')
    op.drop_table('article_categories')
    with op.batch_alter_table('templates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_templates_name'))

    op.drop_table('templates')
    op.drop_table('permissions')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_path'))
        batch_op.drop_index(batch_op.f('ix_categories_name'))

    op.drop_table('categories')
    with op.batch_alter_table('articles', schema=None) as batch_op:
        batch_op.drop_index('ix_articles_title')
        batch_op.drop_index('ix_articles_status')
        batch_op.drop_index('ix_articles_current_commit_id')
        batch_op.drop_index('ix_articles_article_id')

    op.drop_table('articles')
    # ### end Alembic commands ###