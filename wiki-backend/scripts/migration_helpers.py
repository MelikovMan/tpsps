import subprocess
import sys
import os
from typing import Optional

def create_migration(message: str, autogenerate: bool = True) -> bool:
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é"""
    cmd = [sys.executable, "-m", "alembic", "revision"]
    
    if autogenerate:
        cmd.append("--autogenerate")
    
    cmd.extend(["-m", message])
    
    try:
        result = subprocess.run(
            cmd, 
            capture_output=True, 
            text=True, 
            cwd=os.path.dirname(os.path.dirname(__file__))
        )
        
        if result.returncode == 0:
            print(f" –ú–∏–≥—Ä–∞—Ü–∏—è '{message}' —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(result.stdout)
            return True
        else:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ '{message}':")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        return False

def apply_migrations(revision: Optional[str] = None) -> bool:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏"""
    cmd = [sys.executable, "-m", "alembic", "upgrade"]
    cmd.append(revision or "head")
    
    try:
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            cwd=os.path.dirname(os.path.dirname(__file__))
        )
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def downgrade_migrations(revision: str = "-1") -> bool:
    """–û—Ç–∫–∞—Ç—ã–≤–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏"""
    cmd = [sys.executable, "-m", "alembic", "downgrade", revision]
    
    try:
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            cwd=os.path.dirname(os.path.dirname(__file__))
        )
        
        if result.returncode == 0:
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –æ—Ç–∫–∞—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–∞—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–π:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def show_migration_history() -> bool:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –º–∏–≥—Ä–∞—Ü–∏–π"""
    cmd = [sys.executable, "-m", "alembic", "history", "--verbose"]
    
    try:
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            cwd=os.path.dirname(os.path.dirname(__file__))
        )
        
        if result.returncode == 0:
            print("üìú –ò—Å—Ç–æ—Ä–∏—è –º–∏–≥—Ä–∞—Ü–∏–π:")
            print(result.stdout)
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:")
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def current_revision() -> Optional[str]:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â—É—é —Ä–µ–≤–∏–∑–∏—é"""
    cmd = [sys.executable, "-m", "alembic", "current"]
    
    try:
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            cwd=os.path.dirname(os.path.dirname(__file__))
        )
        
        if result.returncode == 0:
            return result.stdout.strip()
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π —Ä–µ–≤–∏–∑–∏–∏:")
            print(result.stderr)
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return None

